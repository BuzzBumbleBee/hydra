// Code generated by go-swagger; DO NOT EDIT.

package admin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/models"
)

// NewVerifyUserCodeRequestParams creates a new VerifyUserCodeRequestParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewVerifyUserCodeRequestParams() *VerifyUserCodeRequestParams {
	return &VerifyUserCodeRequestParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewVerifyUserCodeRequestParamsWithTimeout creates a new VerifyUserCodeRequestParams object
// with the ability to set a timeout on a request.
func NewVerifyUserCodeRequestParamsWithTimeout(timeout time.Duration) *VerifyUserCodeRequestParams {
	return &VerifyUserCodeRequestParams{
		timeout: timeout,
	}
}

// NewVerifyUserCodeRequestParamsWithContext creates a new VerifyUserCodeRequestParams object
// with the ability to set a context for a request.
func NewVerifyUserCodeRequestParamsWithContext(ctx context.Context) *VerifyUserCodeRequestParams {
	return &VerifyUserCodeRequestParams{
		Context: ctx,
	}
}

// NewVerifyUserCodeRequestParamsWithHTTPClient creates a new VerifyUserCodeRequestParams object
// with the ability to set a custom HTTPClient for a request.
func NewVerifyUserCodeRequestParamsWithHTTPClient(client *http.Client) *VerifyUserCodeRequestParams {
	return &VerifyUserCodeRequestParams{
		HTTPClient: client,
	}
}

/* VerifyUserCodeRequestParams contains all the parameters to send to the API endpoint
   for the verify user code request operation.

   Typically these are written to a http.Request.
*/
type VerifyUserCodeRequestParams struct {

	// Body.
	Body *models.VerifyUserCodeRequest

	// DeviceChallenge.
	DeviceChallenge string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the verify user code request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VerifyUserCodeRequestParams) WithDefaults() *VerifyUserCodeRequestParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the verify user code request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VerifyUserCodeRequestParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the verify user code request params
func (o *VerifyUserCodeRequestParams) WithTimeout(timeout time.Duration) *VerifyUserCodeRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the verify user code request params
func (o *VerifyUserCodeRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the verify user code request params
func (o *VerifyUserCodeRequestParams) WithContext(ctx context.Context) *VerifyUserCodeRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the verify user code request params
func (o *VerifyUserCodeRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the verify user code request params
func (o *VerifyUserCodeRequestParams) WithHTTPClient(client *http.Client) *VerifyUserCodeRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the verify user code request params
func (o *VerifyUserCodeRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the verify user code request params
func (o *VerifyUserCodeRequestParams) WithBody(body *models.VerifyUserCodeRequest) *VerifyUserCodeRequestParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the verify user code request params
func (o *VerifyUserCodeRequestParams) SetBody(body *models.VerifyUserCodeRequest) {
	o.Body = body
}

// WithDeviceChallenge adds the deviceChallenge to the verify user code request params
func (o *VerifyUserCodeRequestParams) WithDeviceChallenge(deviceChallenge string) *VerifyUserCodeRequestParams {
	o.SetDeviceChallenge(deviceChallenge)
	return o
}

// SetDeviceChallenge adds the deviceChallenge to the verify user code request params
func (o *VerifyUserCodeRequestParams) SetDeviceChallenge(deviceChallenge string) {
	o.DeviceChallenge = deviceChallenge
}

// WriteToRequest writes these params to a swagger request
func (o *VerifyUserCodeRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// query param device_challenge
	qrDeviceChallenge := o.DeviceChallenge
	qDeviceChallenge := qrDeviceChallenge
	if qDeviceChallenge != "" {

		if err := r.SetQueryParam("device_challenge", qDeviceChallenge); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
