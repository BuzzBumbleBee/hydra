// Code generated by go-swagger; DO NOT EDIT.

package v0alpha2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ory/hydra/internal/httpclient/models"
)

// PerformOAuth2DeviceFlowReader is a Reader for the PerformOAuth2DeviceFlow structure.
type PerformOAuth2DeviceFlowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformOAuth2DeviceFlowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPerformOAuth2DeviceFlowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPerformOAuth2DeviceFlowUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPerformOAuth2DeviceFlowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPerformOAuth2DeviceFlowOK creates a PerformOAuth2DeviceFlowOK with default headers values
func NewPerformOAuth2DeviceFlowOK() *PerformOAuth2DeviceFlowOK {
	return &PerformOAuth2DeviceFlowOK{}
}

/* PerformOAuth2DeviceFlowOK describes a response with status code 200, with default header values.

oAuth2ApiDeviceAuthorizationResponse
*/
type PerformOAuth2DeviceFlowOK struct {
	Payload *models.OAuth2APIDeviceAuthorizationResponse
}

func (o *PerformOAuth2DeviceFlowOK) Error() string {
	return fmt.Sprintf("[GET /oauth2/device/auth][%d] performOAuth2DeviceFlowOK  %+v", 200, o.Payload)
}
func (o *PerformOAuth2DeviceFlowOK) GetPayload() *models.OAuth2APIDeviceAuthorizationResponse {
	return o.Payload
}

func (o *PerformOAuth2DeviceFlowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2APIDeviceAuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformOAuth2DeviceFlowUnauthorized creates a PerformOAuth2DeviceFlowUnauthorized with default headers values
func NewPerformOAuth2DeviceFlowUnauthorized() *PerformOAuth2DeviceFlowUnauthorized {
	return &PerformOAuth2DeviceFlowUnauthorized{}
}

/* PerformOAuth2DeviceFlowUnauthorized describes a response with status code 401, with default header values.

jsonError
*/
type PerformOAuth2DeviceFlowUnauthorized struct {
	Payload *models.JSONError
}

func (o *PerformOAuth2DeviceFlowUnauthorized) Error() string {
	return fmt.Sprintf("[GET /oauth2/device/auth][%d] performOAuth2DeviceFlowUnauthorized  %+v", 401, o.Payload)
}
func (o *PerformOAuth2DeviceFlowUnauthorized) GetPayload() *models.JSONError {
	return o.Payload
}

func (o *PerformOAuth2DeviceFlowUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JSONError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformOAuth2DeviceFlowInternalServerError creates a PerformOAuth2DeviceFlowInternalServerError with default headers values
func NewPerformOAuth2DeviceFlowInternalServerError() *PerformOAuth2DeviceFlowInternalServerError {
	return &PerformOAuth2DeviceFlowInternalServerError{}
}

/* PerformOAuth2DeviceFlowInternalServerError describes a response with status code 500, with default header values.

jsonError
*/
type PerformOAuth2DeviceFlowInternalServerError struct {
	Payload *models.JSONError
}

func (o *PerformOAuth2DeviceFlowInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oauth2/device/auth][%d] performOAuth2DeviceFlowInternalServerError  %+v", 500, o.Payload)
}
func (o *PerformOAuth2DeviceFlowInternalServerError) GetPayload() *models.JSONError {
	return o.Payload
}

func (o *PerformOAuth2DeviceFlowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JSONError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
