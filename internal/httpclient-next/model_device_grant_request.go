/*
 * Ory Hydra API
 *
 * Documentation for all of Ory Hydra's APIs.
 *
 * API version: 1.0.0
 * Contact: hi@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// DeviceGrantRequest struct for DeviceGrantRequest
type DeviceGrantRequest struct {
	Challenge                    *string       `json:"challenge,omitempty"`
	Client                       *OAuth2Client `json:"client,omitempty"`
	HandledAt                    *time.Time    `json:"handled_at,omitempty"`
	RequestedAccessTokenAudience []string      `json:"requested_access_token_audience,omitempty"`
	RequestedScope               []string      `json:"requested_scope,omitempty"`
}

// NewDeviceGrantRequest instantiates a new DeviceGrantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceGrantRequest() *DeviceGrantRequest {
	this := DeviceGrantRequest{}
	return &this
}

// NewDeviceGrantRequestWithDefaults instantiates a new DeviceGrantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceGrantRequestWithDefaults() *DeviceGrantRequest {
	this := DeviceGrantRequest{}
	return &this
}

// GetChallenge returns the Challenge field value if set, zero value otherwise.
func (o *DeviceGrantRequest) GetChallenge() string {
	if o == nil || o.Challenge == nil {
		var ret string
		return ret
	}
	return *o.Challenge
}

// GetChallengeOk returns a tuple with the Challenge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceGrantRequest) GetChallengeOk() (*string, bool) {
	if o == nil || o.Challenge == nil {
		return nil, false
	}
	return o.Challenge, true
}

// HasChallenge returns a boolean if a field has been set.
func (o *DeviceGrantRequest) HasChallenge() bool {
	if o != nil && o.Challenge != nil {
		return true
	}

	return false
}

// SetChallenge gets a reference to the given string and assigns it to the Challenge field.
func (o *DeviceGrantRequest) SetChallenge(v string) {
	o.Challenge = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *DeviceGrantRequest) GetClient() OAuth2Client {
	if o == nil || o.Client == nil {
		var ret OAuth2Client
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceGrantRequest) GetClientOk() (*OAuth2Client, bool) {
	if o == nil || o.Client == nil {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *DeviceGrantRequest) HasClient() bool {
	if o != nil && o.Client != nil {
		return true
	}

	return false
}

// SetClient gets a reference to the given OAuth2Client and assigns it to the Client field.
func (o *DeviceGrantRequest) SetClient(v OAuth2Client) {
	o.Client = &v
}

// GetHandledAt returns the HandledAt field value if set, zero value otherwise.
func (o *DeviceGrantRequest) GetHandledAt() time.Time {
	if o == nil || o.HandledAt == nil {
		var ret time.Time
		return ret
	}
	return *o.HandledAt
}

// GetHandledAtOk returns a tuple with the HandledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceGrantRequest) GetHandledAtOk() (*time.Time, bool) {
	if o == nil || o.HandledAt == nil {
		return nil, false
	}
	return o.HandledAt, true
}

// HasHandledAt returns a boolean if a field has been set.
func (o *DeviceGrantRequest) HasHandledAt() bool {
	if o != nil && o.HandledAt != nil {
		return true
	}

	return false
}

// SetHandledAt gets a reference to the given time.Time and assigns it to the HandledAt field.
func (o *DeviceGrantRequest) SetHandledAt(v time.Time) {
	o.HandledAt = &v
}

// GetRequestedAccessTokenAudience returns the RequestedAccessTokenAudience field value if set, zero value otherwise.
func (o *DeviceGrantRequest) GetRequestedAccessTokenAudience() []string {
	if o == nil || o.RequestedAccessTokenAudience == nil {
		var ret []string
		return ret
	}
	return o.RequestedAccessTokenAudience
}

// GetRequestedAccessTokenAudienceOk returns a tuple with the RequestedAccessTokenAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceGrantRequest) GetRequestedAccessTokenAudienceOk() ([]string, bool) {
	if o == nil || o.RequestedAccessTokenAudience == nil {
		return nil, false
	}
	return o.RequestedAccessTokenAudience, true
}

// HasRequestedAccessTokenAudience returns a boolean if a field has been set.
func (o *DeviceGrantRequest) HasRequestedAccessTokenAudience() bool {
	if o != nil && o.RequestedAccessTokenAudience != nil {
		return true
	}

	return false
}

// SetRequestedAccessTokenAudience gets a reference to the given []string and assigns it to the RequestedAccessTokenAudience field.
func (o *DeviceGrantRequest) SetRequestedAccessTokenAudience(v []string) {
	o.RequestedAccessTokenAudience = v
}

// GetRequestedScope returns the RequestedScope field value if set, zero value otherwise.
func (o *DeviceGrantRequest) GetRequestedScope() []string {
	if o == nil || o.RequestedScope == nil {
		var ret []string
		return ret
	}
	return o.RequestedScope
}

// GetRequestedScopeOk returns a tuple with the RequestedScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceGrantRequest) GetRequestedScopeOk() ([]string, bool) {
	if o == nil || o.RequestedScope == nil {
		return nil, false
	}
	return o.RequestedScope, true
}

// HasRequestedScope returns a boolean if a field has been set.
func (o *DeviceGrantRequest) HasRequestedScope() bool {
	if o != nil && o.RequestedScope != nil {
		return true
	}

	return false
}

// SetRequestedScope gets a reference to the given []string and assigns it to the RequestedScope field.
func (o *DeviceGrantRequest) SetRequestedScope(v []string) {
	o.RequestedScope = v
}

func (o DeviceGrantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Challenge != nil {
		toSerialize["challenge"] = o.Challenge
	}
	if o.Client != nil {
		toSerialize["client"] = o.Client
	}
	if o.HandledAt != nil {
		toSerialize["handled_at"] = o.HandledAt
	}
	if o.RequestedAccessTokenAudience != nil {
		toSerialize["requested_access_token_audience"] = o.RequestedAccessTokenAudience
	}
	if o.RequestedScope != nil {
		toSerialize["requested_scope"] = o.RequestedScope
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceGrantRequest struct {
	value *DeviceGrantRequest
	isSet bool
}

func (v NullableDeviceGrantRequest) Get() *DeviceGrantRequest {
	return v.value
}

func (v *NullableDeviceGrantRequest) Set(val *DeviceGrantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceGrantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceGrantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceGrantRequest(val *DeviceGrantRequest) *NullableDeviceGrantRequest {
	return &NullableDeviceGrantRequest{value: val, isSet: true}
}

func (v NullableDeviceGrantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceGrantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
